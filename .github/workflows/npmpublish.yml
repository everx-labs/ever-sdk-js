name: npm publish

on:
  release:
    types: [published]

jobs:
  publish-npm18:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: CLI
        run: npm publish --access public
        working-directory: ./packages/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Core
        run: npm publish --access public
        working-directory: ./packages/core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: NodeJs
        run: npm publish --access public
        working-directory: ./packages/lib-node
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ReactNative
        run: npm publish --access public
        working-directory: ./packages/lib-react-native
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ReactNativeJsi
        run: |
            npm i
            npx tsc
            npm publish --access public
        working-directory: ./packages/lib-react-native-jsi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: WASM
        run: npm publish --access public
        working-directory: ./packages/lib-web
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  send-discord-msg:
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
